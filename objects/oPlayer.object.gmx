<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sIdle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-20</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
alarm_set(11, 1);
image_speed=.75;
global.alive=true;
global.pause=false;

grav = 0.5;
horsp = 0;
vertsp = 0;
jumpspeed = 10;
movespeed = 4;
shrinker = false;
jumper = false;
candash = false;
canjump=false;
dashing = false;
dashdir = 1;
stun = false;
size=1;
hiJump = false;
shrinking = false;
dash = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.previousRoom = rOptions &amp;&amp; room != rOptions){
    x = global.checkpointx;
    y = global.checkpointy;
    /*if (instance_exists(oLaser)){
        oLaser.x = global.ckptHazPos;
        global.hazardspeed = global.ckptHazSpd;
    }else if (instance_exists(oHazard5)){
        oHazard5.y = global.ckptHazPos;
        oHazard5.speed = global.ckptHazSpd;
    }*/
}
else if (room == rOptions){
    x = 1024;
    y=640;
}
else
{
    global.checkpointx = x;
    global.checkpointy = y;
    /*if (instance_exists(oLaser)){
        oLaser.x = global.ckptHazPos;
        global.hazardspeed = global.ckptHazSpd;
    }else if (instance_exists(oHazard5)){
        oHazard5.y = global.ckptHazPos;
        oHazard5.speed = global.ckptHazSpd;
    }*/
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stun=false
sprite_index=sPlayer;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>jumper = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
movespeed=4
dashing = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>right = keyboard_check((global.right));
left = -keyboard_check((global.left));
jump = keyboard_check_pressed((global.jump));


if(global.highJumpMutation){
    hiJump = keyboard_check_pressed((global.highJump));
}
if(global.shrinkMutation){
    shrinking = keyboard_check_pressed((global.shrink));
}
if(global.dashMutation){
    dash = keyboard_check_pressed((global.dash));
}
normalize = keyboard_check_pressed((global.normal));

if(hiJump){
    jumper = true;
    keyboard_key_press(global.jump);
    keyboard_key_release(global.jump);
    alarm_set(2,30);
}

if(dash){
    if (candash)
    {
        audio_play_sound(dDash,1,false);
        image_index=0;
        alarm_set(0,15);
        dashing = true;
        candash = false;
        movespeed=12;
        vertsp = 0;
    }
}

if(shrinking){
    if(shrinker!=true)
    {
        audio_play_sound(dShrink,1,false);
        jumper = false;
        movespeed = 3;
        shrinker = true;
        alarm_set(1,120);
        size/=2*dashdir;
        if (image_xscale&lt;0)
        {
        image_xscale/=2;
        image_yscale=abs(size);
        }
        else
        {
        image_xscale/=2;
        image_yscale=abs(size);
        }
    }
    else //revert to normal size
    {
    if (place_meeting(x+32,y,oCollider)||place_meeting(x-32,y,oCollider)||place_meeting(x,y-32,oCollider)
||place_meeting(x+32,y-32,oCollider)||place_meeting(x-32,y-32,oCollider))//check if there's room to go big
shrinker=true;
else
{
shrinker=false;
audio_play_sound(dShrink,1,false);
movespeed = 4;
size*=2*dashdir;
   if (image_xscale&lt;0)
        {
        image_xscale*=2;
        image_yscale=abs(size);
        }
        else
        {
        image_xscale*=2;
        image_yscale=abs(size);
        }
y-=2;
}
}
}


if(stun==false)
{
if (dashing==false)//lock out movement while dashing
{
move = left + right;
}
horsp = move * movespeed;

if(horsp&gt;0)//direction of dash based off last movement
{
dashdir = 1;
image_xscale=abs(image_xscale);
}
if(horsp&lt;0)
{
dashdir = -1;
image_xscale=-abs(image_xscale);
}

if(dashing==true) //cancels gravity and jump during dash
{
vertsp=0;
move=dashdir
if (place_meeting(x+1,y,oCollider)||place_meeting(x-1,y,oCollider))//if dash hits a wall, dash is cancelled
{
dashing = false;
}
}

if (place_meeting(x,y+1,oCollider)||canjump) // jump off the ground &amp; air
{
canjump = true
if(jump==1)
{
canjump=false
if (jumper == true)
{ sprite_index=sHighJump;
  image_index=0;
   vertsp = jump * -jumpspeed *1.8
   audio_play_sound(dHJump,1,false);
}
else if (shrinker==true )
{
     audio_play_sound(dJump,1,false);
     vertsp = jump * -jumpspeed *.9
     sprite_index=sJump;
     }
     else
     {
     audio_play_sound(dJump,1,false);
    vertsp = jump * -jumpspeed *1.2
    sprite_index=sJump;//change to jump sprite
    }
}
else
{
sprite_index = sIdle; //change back to normal sprite
}
if (place_meeting(x,y+1,oCollider)&amp;&amp;dashing==false)
candash = true
}

}

if (vertsp &lt; 10)
 vertsp += grav;

if (place_meeting(x+horsp,y,oCollider))//hit walls smoothly
{
    while(!place_meeting(x+sign(horsp),y,oCollider))
    {
        x += sign(horsp);
    }
    horsp = 0;
}
x += horsp;

if (place_meeting(x,y+vertsp,oCollider))//land on ground smoothly
{
    while(!place_meeting(x,y+sign(vertsp),oCollider))
    {
        y += sign(vertsp);
    }
    vertsp = 0;
}


if(dashing==false) //apply vertical speed if not dashing
y += vertsp;
else
sprite_index=sDash;

if(stun==true)//dont move left or right if stunned
horsp=0;


if (sprite_index == sHighJump) //slow jump animation
image_speed=.5;

if(move!=0&amp;&amp;jumper==false&amp;&amp;dashing==false&amp;&amp;(place_meeting(x,y+1,oCollider)||(!place_meeting(x,y+1,oCollider)&amp;&amp;canjump==true))) //change to run animation only while moving on the ground
sprite_index=sPlayer;

if(stun==true) //change to stun sprite if stunned
{
sprite_index=sStun;
image_speed=.25;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oHazard5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///deathScript
x=global.checkpointx;
y=global.checkpointy;
audio_play_sound(dDeath,1,false);
oLaser.x=global.ckptHazPos;
oLaser.hspeed = global.ckptHazSpd;
if(instance_exists(oHazard5)){
oHazard5.y=global.ckptHazPos;
oHazard5.vspeed = global.ckptHazSpd;
}
global.alive=false;
dashing=false;
global.deaths++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oEnemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stun = true
alarm_set(9,30)
if(!audio_is_playing(dStun))
audio_play_sound(dStun,1,false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oSpikes">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///deathScript
x=global.checkpointx;
y=global.checkpointy;
audio_play_sound(dDeath,1,false);
oLaser.x=global.ckptHazPos;
oLaser.hspeed = global.ckptHazSpd;
if(instance_exists(oHazard5)){
oHazard5.y=global.ckptHazPos;
oHazard5.vspeed = global.ckptHazSpd;
}
global.alive=false;
dashing=false;
global.deaths++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oLaser">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///deathScript
x=global.checkpointx;
y=global.checkpointy;
audio_play_sound(dDeath,1,false);
oLaser.x=global.ckptHazPos;
oLaser.hspeed = global.ckptHazSpd;
if(instance_exists(oHazard5)){
oHazard5.y=global.ckptHazPos;
oHazard5.vspeed = global.ckptHazSpd;
}
global.alive=false;
dashing=false;
global.deaths++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (sprite_index == sHighJump)
sprite_index=sJump;

if (sprite_index == sDash)
sprite_index=sJump;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///deathScript
x=global.checkpointx;
y=global.checkpointy;
audio_play_sound(dDeath,1,false);
oLaser.x=global.ckptHazPos;
oLaser.speed = global.ckptHazSpd
if(instance_exists(oHazard5)){
oHazard5.y=global.ckptHazPos;
oHazard5.speed = global.ckptHazSpd
}
global.alive=false;
dashing=false;
global.deaths++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (room==rHub){
room_goto(rMain);
}
else{
room_goto(rOptions);
}
if (room==rOptions){
room_goto(global.currentRoom);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
